function ReplacePairsWithParentsFilter(pairs) {
  var pairsContainer = $('#pairs');
  if ($('#litters_filter').val() == "" || $('#litters_filter').val() == null) {
    $(pairsContainer).html(pairs).hide().fadeIn(400);

    // Immediately initialize tabs to prevent all pictures being shown on top of each other
    $('.tabs').tabs({swipeable: true})

     // Set the tab intializer and event in a timeout so we're sure the cards are already faded in 
     setTimeout(function() {
     $('.tabs').tabs({swipeable: true})
     // Switch tabs when clicking on pair card image
      $('.card .tabs-content').on('click', function(e) {

      // Get the properties and instance of the tabs
      var card = $(this).closest('.card');
      var elem = $(card).find('.tabs');
      var instance = M.Tabs.getInstance(elem);

      var tabs = $(card).find('.tab');
      var tabIndex = instance.index;
      var totalTabs = elem.length;

      if (tabIndex == totalTabs) {
        var tabId = $(tabs[0]).find('a').attr('href');
      }

      else {
        var tabId = $(tabs[tabIndex+1]).find('a').attr('href');
      }

      // Trigger a click on one of the tabs when clicking on the image
      var selector = "a[href|='" + tabId + "']";
      $(selector)[0].click();
    });
     }, 400);
  }
  objectFitPolyfill();
}

function ReplaceLittersWithParentsFilter(litters) {
  if ($('#litters_filter').val() == "" || $('#litters_filter').val() == null) {
    var littersContainer = $('#litters');
    $(littersContainer).html(litters);

    // Close select when clicking or tapping on the first disabled option
    function closeSelectOnDisabledOption(e) {
      $(':focus').blur();    
      $('header').trigger('click');
    }

    function showActiveFilterIcon(card) {
      $(card).find('.filter-icon-container').show();
      $(card).find('.filter-icon-container').addClass('active');
      $(card).find('.add-circle').hide();
      $(card).find('.check-circle').show();
    }

    function hideActiveFilterIcon(card) {
      $(card).find('.filter-icon-container').hide();
      $(card).find('.filter-icon-container').removeClass('active');
      $(card).find('.check-circle').hide();
      $(card).find('.add-circle').show();
    }
      
    // Cards filtering event
    function cardFilteringIcon() {
      var animationTime = 100; 
      $('#litters .card').on({
        mouseenter: function() {
          $(this).find('.filter-icon-container').fadeIn(animationTime);
        },
        mouseleave: function() {
          $(this).find('.filter-icon-container:not(.active)').fadeOut(animationTime*2);
        },
        click: function() {
          var currentSection = $(this).closest('.section');
          var selectForm = $(currentSection).find('select');
          var catId = $(this).find('.cat-id').text();

          if ($(this).find('.filter-icon-container').hasClass('active')) {
            hideActiveFilterIcon(this);

            // Remove selected options from dropdown
            $(selectForm).find("option[value='" + catId + "']").prop('selected', false)
            $(selectForm).formSelect();
            $('.disabled').on('click', closeSelectOnDisabledOption);
            $(currentSection).find('.form-filter').trigger('change');
          }

          else {
            showActiveFilterIcon(this);

            // Add selected options to dropdown
            $(selectForm).find("option[value='" + catId + "']").prop('selected', true);
            $(selectForm).formSelect();
            $('.disabled').on('click', closeSelectOnDisabledOption);
            $(currentSection).find('.form-filter').trigger('change');
          }
        }
      });
    }
    cardFilteringIcon();
    
    // Add image carousel for litters
    $('#litters .carousel').carousel({ 
      fullWidth: true,
      indicators: true
    });
  }
  objectFitPolyfill();
}

function ReplaceKittensWithParentsFilter(kittens) {
  var kittensContainer = $('#kittens');
  $(kittensContainer).html(kittens).hide().fadeIn(400);
  objectFitPolyfill();
}

<% if @pairs.any? %>
ReplacePairsWithParentsFilter("<%= j(render 'cattery_pairs')%>");
<% else %>
ReplacePairsWithParentsFilter("<div class='col s12 center-align'><span class='empty-message'><%= t('index.no_pairs_found') %>!</span></div>");
<% end %>

<% if @litters.any? %>
ReplaceLittersWithParentsFilter("<%= j(render 'cattery_litters')%>");
<% else %>
ReplaceLittersWithParentsFilter("<div class='col s12 center-align'><span class='empty-message'><%= t('index.no_litters_found') %>!</span></div>");
<% end %>

<% if @kittens.any? %>
ReplaceKittensWithParentsFilter("<%= j(render 'cattery_kittens')%>");
<% else %>
ReplaceKittensWithParentsFilter("<div class='col s12 center-align'><span class='empty-message'><%= t('index.no_kittens_found') %>!</span></div>");
<% end %>
  
// Switch tabs when clicking on pair card image
$('.card .tabs-content').off('click');
$('.card .tabs-content').on('click', function(e) {
  // Get the properties and instance of the tabs
  var card = $(this).closest('.card');
  var elem = $(card).find('.tabs');
  var instance = M.Tabs.getInstance(elem);
  var tabs = $(card).find('.tab');
  var tabIndex = instance.index;
  var totalTabs = elem.length;

  if (tabIndex == totalTabs) {
    var tabId = $(tabs[0]).find('a').attr('href');
  }

  else {
    var tabId = $(tabs[tabIndex+1]).find('a').attr('href');
  }

  // Trigger a click on one of the tabs when clicking on the image
  var selector = "a[href|='" + tabId + "']";
  $(selector)[0].click();
});